import { Readable } from 'node:stream';

interface PutBlobResult {
    url: string;
}
interface HeadBlobResult {
    size: string;
    uploadedAt: Date;
    pathname: string;
    contentType: string;
    contentDisposition: string;
    contentEncoding: string;
    cacheControl: string;
}
interface BlobCommandOptions {
    token?: string;
}
interface PutCommandOptions extends BlobCommandOptions {
    access: 'public';
    contentType?: string;
    contentEncoding?: string;
    cacheControl?: string;
}
declare function put(pathname: string, body: string | Readable | Blob | ArrayBuffer | FormData | ReadableStream, options: PutCommandOptions): Promise<PutBlobResult>;
declare function del(url: string, options?: BlobCommandOptions): Promise<void>;
declare function head(url: string, options?: BlobCommandOptions): Promise<HeadBlobResult>;

export { HeadBlobResult, PutBlobResult, del, head, put };
